{"version":3,"sources":["js/components/particle.js"],"names":["window","addEventListener","windowLoadHandler","sphereRad","radius_sp","Debugger","log","message","console","exception","canvasApp","canvasSupport","Modernizr","canvas","theCanvas","document","getElementById","context","getContext","displayWidth","displayHeight","timer","wait","count","numToAddEachFrame","particleList","recycleBin","particleAlpha","r","g","b","fLen","m","projCenterX","projCenterY","zMax","turnAngle","turnSpeed","sphereCenterX","sphereCenterY","sphereCenterZ","particleRad","zeroAlphaDepth","randAccelX","randAccelY","randAccelZ","gravity","rgbString","p","outsideTest","nextParticle","sinAngle","cosAngle","rotX","rotZ","depthAlphaFactor","i","theta","phi","x0","y0","z0","init","innerWidth","innerHeight","Math","PI","setInterval","onTimer","random","acos","sin","cos","addParticle","attack","hold","decay","initValue","holdValue","lastValue","stuckTime","accelX","accelY","accelZ","fillStyle","fillRect","first","next","age","velX","velY","velZ","x","y","z","projX","projY","alpha","dead","recycle","beginPath","arc","closePath","fill","vx0","vy0","vz0","newParticle","color","prev","right"],"mappings":"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","file":"particle.05786e6d.js","sourceRoot":"..","sourcesContent":["\r\nwindow.addEventListener(\"load\", windowLoadHandler, false);\r\nvar sphereRad = 280;\r\nvar radius_sp = 1;\r\n//for debug messages\r\nvar Debugger = function () { };\r\nDebugger.log = function (message) {\r\n  try {\r\n    console.log(message);\r\n  }\r\n  catch (exception) {\r\n    return;\r\n  }\r\n}\r\n\r\nfunction windowLoadHandler() {\r\n  canvasApp();\r\n}\r\n\r\nfunction canvasSupport() {\r\n  return Modernizr.canvas;\r\n}\r\n\r\nfunction canvasApp() {\r\n  if (!canvasSupport()) {\r\n    return;\r\n  }\r\n\r\n  var theCanvas = document.getElementById(\"canvasOne\");\r\n  var context = theCanvas.getContext(\"2d\");\r\n\r\n  var displayWidth;\r\n  var displayHeight;\r\n  var timer;\r\n  var wait;\r\n  var count;\r\n  var numToAddEachFrame;\r\n  var particleList;\r\n  var recycleBin;\r\n  var particleAlpha;\r\n  var r, g, b;\r\n  var fLen;\r\n  var m;\r\n  var projCenterX;\r\n  var projCenterY;\r\n  var zMax;\r\n  var turnAngle;\r\n  var turnSpeed;\r\n  var sphereCenterX, sphereCenterY, sphereCenterZ;\r\n  var particleRad;\r\n  var zeroAlphaDepth;\r\n  var randAccelX, randAccelY, randAccelZ;\r\n  var gravity;\r\n  var rgbString;\r\n  //we are defining a lot of variables used in the screen update functions globally so that they don't have to be redefined every frame.\r\n  var p;\r\n  var outsideTest;\r\n  var nextParticle;\r\n  var sinAngle;\r\n  var cosAngle;\r\n  var rotX, rotZ;\r\n  var depthAlphaFactor;\r\n  var i;\r\n  var theta, phi;\r\n  var x0, y0, z0;\r\n\r\n  init();\r\n\r\n  function init() {\r\n    wait = 1;\r\n    count = wait - 1;\r\n    numToAddEachFrame = 8;\r\n\r\n    //particle color\r\n    r = 92;\r\n    g = 242;\r\n    b = 145;\r\n\r\n    rgbString = \"rgba(\" + r + \",\" + g + \",\" + b + \",\"; //partial string for color which will be completed by appending alpha value.\r\n    particleAlpha = 1; //maximum alpha\r\n\r\n    displayWidth = window.innerWidth;\r\n    displayHeight = window.innerHeight;\r\n\r\n    fLen = 320; //represents the distance from the viewer to z=0 depth.\r\n\r\n    //projection center coordinates sets location of origin\r\n    projCenterX = displayWidth / 2;\r\n    projCenterY = displayHeight / 2;\r\n\r\n    //we will not draw coordinates if they have too large of a z-coordinate (which means they are very close to the observer).\r\n    zMax = fLen - 2;\r\n\r\n    particleList = {};\r\n    recycleBin = {};\r\n\r\n    //random acceleration factors - causes some random motion\r\n    randAccelX = 0.1;\r\n    randAccelY = 0.1;\r\n    randAccelZ = 0.1;\r\n\r\n    gravity = -0; //try changing to a positive number (not too large, for example 0.3), or negative for floating upwards.\r\n\r\n    particleRad = 2.5;\r\n\r\n    sphereCenterX = 0;\r\n    sphereCenterY = 0;\r\n    sphereCenterZ = -3 - sphereRad;\r\n\r\n    //alpha values will lessen as particles move further back, causing depth-based darkening:\r\n    zeroAlphaDepth = -750;\r\n\r\n    turnSpeed = 2 * Math.PI / 1200; //the sphere will rotate at this speed (one complete rotation every 1600 frames).\r\n    turnAngle = 0; //initial angle\r\n\r\n    timer = setInterval(onTimer, 10 / 24);\r\n  }\r\n\r\n  function onTimer() {\r\n    //if enough time has elapsed, we will add new particles.\t\t\r\n    count++;\r\n    if (count >= wait) {\r\n\r\n      count = 0;\r\n      for (i = 0; i < numToAddEachFrame; i++) {\r\n        theta = Math.random() * 2 * Math.PI;\r\n        phi = Math.acos(Math.random() * 2 - 1);\r\n        x0 = sphereRad * Math.sin(phi) * Math.cos(theta);\r\n        y0 = sphereRad * Math.sin(phi) * Math.sin(theta);\r\n        z0 = sphereRad * Math.cos(phi);\r\n\r\n        //We use the addParticle function to add a new particle. The parameters set the position and velocity components.\r\n        //Note that the velocity parameters will cause the particle to initially fly outwards away from the sphere center (after\r\n        //it becomes unstuck).\r\n        var p = addParticle(x0, sphereCenterY + y0, sphereCenterZ + z0, 0.002 * x0, 0.002 * y0, 0.002 * z0);\r\n\r\n        //we set some \"envelope\" parameters which will control the evolving alpha of the particles.\r\n        p.attack = 50;\r\n        p.hold = 50;\r\n        p.decay = 100;\r\n        p.initValue = 0;\r\n        p.holdValue = particleAlpha;\r\n        p.lastValue = 0;\r\n\r\n        //the particle will be stuck in one place until this time has elapsed:\r\n        p.stuckTime = 90 + Math.random() * 20;\r\n\r\n        p.accelX = 0;\r\n        p.accelY = gravity;\r\n        p.accelZ = 0;\r\n      }\r\n    }\r\n\r\n    //update viewing angle\r\n    turnAngle = (turnAngle + turnSpeed) % (2 * Math.PI);\r\n    sinAngle = Math.sin(turnAngle);\r\n    cosAngle = Math.cos(turnAngle);\r\n\r\n    //background fill\r\n    context.fillStyle = \"#ffffff\";\r\n    context.fillRect(0, 0, displayWidth, displayHeight);\r\n\r\n    //update and draw particles\r\n    p = particleList.first;\r\n    while (p != null) {\r\n      //before list is altered record next particle\r\n      nextParticle = p.next;\r\n\r\n      //update age\r\n      p.age++;\r\n\r\n      //if the particle is past its \"stuck\" time, it will begin to move.\r\n      if (p.age > p.stuckTime) {\r\n        p.velX += p.accelX + randAccelX * (Math.random() * 2 - 1);\r\n        p.velY += p.accelY + randAccelY * (Math.random() * 2 - 1);\r\n        p.velZ += p.accelZ + randAccelZ * (Math.random() * 2 - 1);\r\n\r\n        p.x += p.velX;\r\n        p.y += p.velY;\r\n        p.z += p.velZ;\r\n      }\r\n\r\n\t\t\t/*\r\n\t\t\tWe are doing two things here to calculate display coordinates.\r\n\t\t\tThe whole display is being rotated around a vertical axis, so we first calculate rotated coordinates for\r\n\t\t\tx and z (but the y coordinate will not change).\r\n\t\t\tThen, we take the new coordinates (rotX, y, rotZ), and project these onto the 2D view plane.\r\n\t\t\t*/\r\n      rotX = cosAngle * p.x + sinAngle * (p.z - sphereCenterZ);\r\n      rotZ = -sinAngle * p.x + cosAngle * (p.z - sphereCenterZ) + sphereCenterZ;\r\n      m = radius_sp * fLen / (fLen - rotZ);\r\n      p.projX = rotX * m + projCenterX;\r\n      p.projY = p.y * m + projCenterY;\r\n\r\n      //update alpha according to envelope parameters.\r\n      if (p.age < p.attack + p.hold + p.decay) {\r\n        if (p.age < p.attack) {\r\n          p.alpha = (p.holdValue - p.initValue) / p.attack * p.age + p.initValue;\r\n        }\r\n        else if (p.age < p.attack + p.hold) {\r\n          p.alpha = p.holdValue;\r\n        }\r\n        else if (p.age < p.attack + p.hold + p.decay) {\r\n          p.alpha = (p.lastValue - p.holdValue) / p.decay * (p.age - p.attack - p.hold) + p.holdValue;\r\n        }\r\n      }\r\n      else {\r\n        p.dead = true;\r\n      }\r\n\r\n      //see if the particle is still within the viewable range.\r\n      if ((p.projX > displayWidth) || (p.projX < 0) || (p.projY < 0) || (p.projY > displayHeight) || (rotZ > zMax)) {\r\n        outsideTest = true;\r\n      }\r\n      else {\r\n        outsideTest = false;\r\n      }\r\n\r\n      if (outsideTest || p.dead) {\r\n        recycle(p);\r\n      }\r\n\r\n      else {\r\n        //depth-dependent darkening\r\n        depthAlphaFactor = (1 - rotZ / zeroAlphaDepth);\r\n        depthAlphaFactor = (depthAlphaFactor > 1) ? 1 : ((depthAlphaFactor < 0) ? 0 : depthAlphaFactor);\r\n        context.fillStyle = rgbString + depthAlphaFactor * p.alpha + \")\";\r\n\r\n        //draw\r\n        context.beginPath();\r\n        context.arc(p.projX, p.projY, m * particleRad, 0, 2 * Math.PI, false);\r\n        context.closePath();\r\n        context.fill();\r\n      }\r\n\r\n      p = nextParticle;\r\n    }\r\n  }\r\n\r\n  function addParticle(x0, y0, z0, vx0, vy0, vz0) {\r\n    var newParticle;\r\n    var color;\r\n\r\n    //check recycle bin for available drop:\r\n    if (recycleBin.first != null) {\r\n      newParticle = recycleBin.first;\r\n      //remove from bin\r\n      if (newParticle.next != null) {\r\n        recycleBin.first = newParticle.next;\r\n        newParticle.next.prev = null;\r\n      }\r\n      else {\r\n        recycleBin.first = null;\r\n      }\r\n    }\r\n    //if the recycle bin is empty, create a new particle (a new ampty object):\r\n    else {\r\n      newParticle = {};\r\n    }\r\n\r\n    //add to beginning of particle list\r\n    if (particleList.first == null) {\r\n      particleList.first = newParticle;\r\n      newParticle.prev = null;\r\n      newParticle.next = null;\r\n    }\r\n    else {\r\n      newParticle.next = particleList.first;\r\n      particleList.first.prev = newParticle;\r\n      particleList.first = newParticle;\r\n      newParticle.prev = null;\r\n    }\r\n\r\n    //initialize\r\n    newParticle.x = x0;\r\n    newParticle.y = y0;\r\n    newParticle.z = z0;\r\n    newParticle.velX = vx0;\r\n    newParticle.velY = vy0;\r\n    newParticle.velZ = vz0;\r\n    newParticle.age = 0;\r\n    newParticle.dead = false;\r\n    if (Math.random() < 0.5) {\r\n      newParticle.right = true;\r\n    }\r\n    else {\r\n      newParticle.right = false;\r\n    }\r\n    return newParticle;\r\n  }\r\n\r\n  function recycle(p) {\r\n    //remove from particleList\r\n    if (particleList.first == p) {\r\n      if (p.next != null) {\r\n        p.next.prev = null;\r\n        particleList.first = p.next;\r\n      }\r\n      else {\r\n        particleList.first = null;\r\n      }\r\n    }\r\n    else {\r\n      if (p.next == null) {\r\n        p.prev.next = null;\r\n      }\r\n      else {\r\n        p.prev.next = p.next;\r\n        p.next.prev = p.prev;\r\n      }\r\n    }\r\n    //add to recycle bin\r\n    if (recycleBin.first == null) {\r\n      recycleBin.first = p;\r\n      p.prev = null;\r\n      p.next = null;\r\n    }\r\n    else {\r\n      p.next = recycleBin.first;\r\n      recycleBin.first.prev = p;\r\n      recycleBin.first = p;\r\n      p.prev = null;\r\n    }\r\n  }\r\n}"]}