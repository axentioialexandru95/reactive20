{"version":3,"sources":["js/header-animation.js"],"names":["window","addEventListener","windowLoadHandler","sphereRad","radius_sp","Debugger","canvasApp","canvasSupport","Modernizr","canvas","theCanvas","displayWidth","displayHeight","wait","count","numToAddEachFrame","particleList","recycleBin","particleAlpha","fLen","m","projCenterX","projCenterY","zMax","turnAngle","turnSpeed","sphereCenterY","sphereCenterZ","particleRad","zeroAlphaDepth","randAccelX","randAccelY","randAccelZ","gravity","rgbString","nextParticle","sinAngle","cosAngle","rotX","rotZ","depthAlphaFactor","i","theta","phi","x0","y0","z0","document","getElementById","context","getContext","width","height","Math","PI","setInterval","onTimer","random","acos","sin","cos","p","addParticle","attack","hold","decay","initValue","holdValue","lastValue","stuckTime","accelX","accelY","accelZ","fillStyle","fillRect","first","next","age","velX","velY","velZ","x","y","z","projX","projY","alpha","dead","recycle","beginPath","arc","closePath","fill","vx0","vy0","vz0","newParticle","prev","right","log","message","console","exception"],"mappings":";AACAA,OAAOC,iBAAiB,OAAQC,GAAmB,GACnD,IAAIC,EAAY,IACZC,EAAU,EAEVC,EAAW,aAUf,SAASH,IACRI,IAGD,SAASC,IACDC,OAAAA,UAAUC,OAGlB,SAASH,IACJ,GAACC,IAAD,CAIAG,IAGAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACeC,EAAeC,EAC9BC,EACAC,EACAC,EAAYC,EAAYC,EACxBC,EACAC,EAIAC,EACAC,EACAC,EACAC,EAAMC,EACNC,EACAC,EACAC,EAAOC,EACPC,EAAIC,EAAIC,EApCRpC,EAAYqC,SAASC,eAAe,aACpCC,EAAUvC,EAAUwC,WAAW,MAyClCpC,EADAD,EAAO,EAEPE,EAAoB,GAWpBmB,EAAY,QAJF,GAIY,IAHlB,GAGwB,IAFlB,GAEwB,IAClChB,EAAgB,EAEhBP,EAAeD,EAAUyC,MACzBvC,EAAgBF,EAAU0C,OAK1B/B,EAAcV,EAAe,IAC7BW,EAAcV,EAAc,EAG5BW,GAPAJ,EAAO,MAOK,EAEZH,EAAe,GACfC,EAAa,GAGba,EAAa,GACbC,EAAa,GACbC,EAAa,GAEbC,EAAU,EAEVL,EAAc,IAEE,EAChBF,EAAgB,EAChBC,GAAiB,EAAIxB,EAGrB0B,GAAkB,IAElBJ,EAAY,EAAE4B,KAAKC,GAAG,IACtB9B,EAAY,EAEJ+B,YAAYC,EAAS,GAAG,IAGxBA,SAAAA,IAGH1C,KADLA,GACcD,EAGR4B,IADL3B,EAAQ,EACH2B,EAAI,EAAGA,EAAI1B,EAAmB0B,IAAK,CACvCC,EAAsB,EAAdW,KAAKI,SAAWJ,KAAKC,GAC7BX,EAAMU,KAAKK,KAAmB,EAAdL,KAAKI,SAAW,GAChCb,EAAKzC,EAAUkD,KAAKM,IAAIhB,GAAKU,KAAKO,IAAIlB,GACtCG,EAAK1C,EAAUkD,KAAKM,IAAIhB,GAAKU,KAAKM,IAAIjB,GACtCI,EAAK3C,EAAUkD,KAAKO,IAAIjB,GAKpBkB,IAAAA,EAAIC,EAAYlB,EAAIlB,EAAgBmB,EAAIlB,EAAgBmB,EAAI,KAAMF,EAAI,KAAMC,EAAI,KAAMC,GAG1Fe,EAAEE,OAAS,GACXF,EAAEG,KAAO,GACTH,EAAEI,MAAQ,IACVJ,EAAEK,UAAY,EACdL,EAAEM,UAAYjD,EACd2C,EAAEO,UAAY,EAGdP,EAAEQ,UAAY,GAAmB,GAAdhB,KAAKI,SAExBI,EAAES,OAAS,EACXT,EAAEU,OAAStC,EACX4B,EAAEW,OAAS,EAeNX,IAVPrC,GAAaA,EAAYC,IAAc,EAAE4B,KAAKC,IAC9ClB,EAAWiB,KAAKM,IAAInC,GACpBa,EAAWgB,KAAKO,IAAIpC,GAGpByB,EAAQwB,UAAY,QACpBxB,EAAQyB,SAAS,EAAE,EAAE/D,EAAaC,GAGlCiD,EAAI7C,EAAa2D,MACL,MAALd,GAEN1B,EAAe0B,EAAEe,KAGjBf,EAAEgB,MAGEhB,EAAEgB,IAAMhB,EAAEQ,YACbR,EAAEiB,MAAQjB,EAAES,OAASxC,GAA0B,EAAduB,KAAKI,SAAa,GACnDI,EAAEkB,MAAQlB,EAAEU,OAASxC,GAA0B,EAAdsB,KAAKI,SAAa,GACnDI,EAAEmB,MAAQnB,EAAEW,OAASxC,GAA0B,EAAdqB,KAAKI,SAAa,GAEnDI,EAAEoB,GAAKpB,EAAEiB,KACTjB,EAAEqB,GAAKrB,EAAEkB,KACTlB,EAAEsB,GAAKtB,EAAEmB,MASV1C,EAAQD,EAASwB,EAAEoB,EAAI7C,GAAUyB,EAAEsB,EAAIxD,GACvCY,GAASH,EAASyB,EAAEoB,EAAI5C,GAAUwB,EAAEsB,EAAIxD,GAAiBA,EACzDP,EAAGhB,EAAWe,GAAMA,EAAOoB,GAC3BsB,EAAEuB,MAAQ9C,EAAKlB,EAAIC,EACnBwC,EAAEwB,MAAQxB,EAAEqB,EAAE9D,EAAIE,EAGduC,EAAEgB,IAAMhB,EAAEE,OAAOF,EAAEG,KAAKH,EAAEI,MACzBJ,EAAEgB,IAAMhB,EAAEE,OACbF,EAAEyB,OAASzB,EAAEM,UAAYN,EAAEK,WAAWL,EAAEE,OAAOF,EAAEgB,IAAMhB,EAAEK,UAEjDL,EAAEgB,IAAMhB,EAAEE,OAAOF,EAAEG,KAC3BH,EAAEyB,MAAQzB,EAAEM,UAEJN,EAAEgB,IAAMhB,EAAEE,OAAOF,EAAEG,KAAKH,EAAEI,QAClCJ,EAAEyB,OAASzB,EAAEO,UAAYP,EAAEM,WAAWN,EAAEI,OAAOJ,EAAEgB,IAAIhB,EAAEE,OAAOF,EAAEG,MAAQH,EAAEM,WAI3EN,EAAE0B,MAAO,EAIL1B,EAAEuB,MAAQzE,GAAgBkD,EAAEuB,MAAM,GAAKvB,EAAEwB,MAAM,GAAKxB,EAAEwB,MAAMzE,GAAiB2B,EAAKhB,GAOtEsC,EAAE0B,KAClBC,EAAQ3B,IAMRrB,GADAA,EAAoB,EAAED,EAAKV,GACY,EAAK,EAAMW,EAAiB,EAAK,EAAIA,EAC5ES,EAAQwB,UAAYvC,EAAYM,EAAiBqB,EAAEyB,MAAQ,IAG3DrC,EAAQwC,YACRxC,EAAQyC,IAAI7B,EAAEuB,MAAOvB,EAAEwB,MAAOjE,EAAEQ,EAAa,EAAG,EAAEyB,KAAKC,IAAI,GAC3DL,EAAQ0C,YACR1C,EAAQ2C,QAGT/B,EAAI1B,EAIG2B,SAAAA,EAAYlB,EAAGC,EAAGC,EAAG+C,EAAIC,EAAIC,GACjCC,IAAAA,EAgDGA,OA5CiB,MAApB/E,EAAW0D,MAGU,OAFxBqB,EAAc/E,EAAW0D,OAETC,MACf3D,EAAW0D,MAAQqB,EAAYpB,KAC/BoB,EAAYpB,KAAKqB,KAAO,MAGxBhF,EAAW0D,MAAQ,KAKpBqB,EAAc,GAIW,MAAtBhF,EAAa2D,OAChB3D,EAAa2D,MAAQqB,EACrBA,EAAYC,KAAO,KACnBD,EAAYpB,KAAO,OAGnBoB,EAAYpB,KAAO5D,EAAa2D,MAChC3D,EAAa2D,MAAMsB,KAAOD,EAC1BhF,EAAa2D,MAAQqB,EACrBA,EAAYC,KAAO,MAIpBD,EAAYf,EAAIrC,EAChBoD,EAAYd,EAAIrC,EAChBmD,EAAYb,EAAIrC,EAChBkD,EAAYlB,KAAOe,EACnBG,EAAYjB,KAAOe,EACnBE,EAAYhB,KAAOe,EACnBC,EAAYnB,IAAM,EAClBmB,EAAYT,MAAO,EACflC,KAAKI,SAAW,GACnBuC,EAAYE,OAAQ,EAGpBF,EAAYE,OAAQ,EAEdF,EAGCR,SAAAA,EAAQ3B,GAEZ7C,EAAa2D,OAASd,EACX,MAAVA,EAAEe,MACLf,EAAEe,KAAKqB,KAAO,KACdjF,EAAa2D,MAAQd,EAAEe,MAGvB5D,EAAa2D,MAAQ,KAIR,MAAVd,EAAEe,KACLf,EAAEoC,KAAKrB,KAAO,MAGdf,EAAEoC,KAAKrB,KAAOf,EAAEe,KAChBf,EAAEe,KAAKqB,KAAOpC,EAAEoC,MAIM,MAApBhF,EAAW0D,OACd1D,EAAW0D,MAAQd,EACnBA,EAAEoC,KAAO,KACTpC,EAAEe,KAAO,OAGTf,EAAEe,KAAO3D,EAAW0D,MACpB1D,EAAW0D,MAAMsB,KAAOpC,EACxB5C,EAAW0D,MAAQd,EACnBA,EAAEoC,KAAO,OA/TZ5F,EAAS8F,IAAM,SAASC,GACnB,IACHC,QAAQF,IAAIC,GAEb,MAAOE,GACN","file":"header-animation.9ff401a6.js","sourceRoot":"..","sourcesContent":["\r\nwindow.addEventListener(\"load\", windowLoadHandler, false);\r\nvar sphereRad = 520;\r\nvar radius_sp=1;\r\n//for debug messages\r\nvar Debugger = function() { };\r\nDebugger.log = function(message) {\r\n\ttry {\r\n\t\tconsole.log(message);\r\n\t}\r\n\tcatch (exception) {\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\nfunction windowLoadHandler() {\r\n\tcanvasApp();\r\n}\r\n\r\nfunction canvasSupport() {\r\n\treturn Modernizr.canvas;\r\n}\r\n\r\nfunction canvasApp() {\r\n\tif (!canvasSupport()) {\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvar theCanvas = document.getElementById(\"canvasOne\");\r\n\tvar context = theCanvas.getContext(\"2d\");\r\n\t\r\n\tvar displayWidth;\r\n\tvar displayHeight;\r\n\tvar timer;\r\n\tvar wait;\r\n\tvar count;\r\n\tvar numToAddEachFrame;\r\n\tvar particleList;\r\n\tvar recycleBin;\r\n\tvar particleAlpha;\r\n\tvar r,g,b;\r\n\tvar fLen;\r\n\tvar m;\r\n\tvar projCenterX;\r\n\tvar projCenterY;\r\n\tvar zMax;\r\n\tvar turnAngle;\r\n\tvar turnSpeed;\r\n\tvar sphereCenterX, sphereCenterY, sphereCenterZ;\r\n\tvar particleRad;\r\n\tvar zeroAlphaDepth;\r\n\tvar randAccelX, randAccelY, randAccelZ;\r\n\tvar gravity;\r\n\tvar rgbString;\r\n\t//we are defining a lot of variables used in the screen update functions globally so that they don't have to be redefined every frame.\r\n\tvar p;\r\n\tvar outsideTest;\r\n\tvar nextParticle;\r\n\tvar sinAngle;\r\n\tvar cosAngle;\r\n\tvar rotX, rotZ;\r\n\tvar depthAlphaFactor;\r\n\tvar i;\r\n\tvar theta, phi;\r\n\tvar x0, y0, z0;\r\n\t\t\r\n\tinit();\r\n\t\r\n\tfunction init() {\r\n\t\twait = 1;\r\n\t\tcount = wait;\r\n\t\tnumToAddEachFrame = 24;\r\n\t\t\r\n\t\t//particle color\r\n\t\t// r = 92;\r\n\t\t// g = 242;\r\n        // b = 145;\r\n        \r\n        r = 19;\r\n\t\tg = 61;\r\n        b = 34;\r\n        \r\n\t\trgbString = \"rgba(\"+r+\",\"+g+\",\"+b+\",\"; //partial string for color which will be completed by appending alpha value.\r\n\t\tparticleAlpha = 1; //maximum alpha\r\n\t\t\r\n\t\tdisplayWidth = theCanvas.width;\r\n\t\tdisplayHeight = theCanvas.height;\r\n\t\t\r\n\t\tfLen = 9020; //represents the distance from the viewer to z=0 depth.\r\n\t\t\r\n\t\t//projection center coordinates sets location of origin\r\n\t\tprojCenterX = displayWidth - 300;\r\n\t\tprojCenterY = displayHeight/3;\r\n\t\t\r\n\t\t//we will not draw coordinates if they have too large of a z-coordinate (which means they are very close to the observer).\r\n\t\tzMax = fLen-2;\r\n\t\t\r\n\t\tparticleList = {};\r\n\t\trecycleBin = {};\r\n\t\t\r\n\t\t//random acceleration factors - causes some random motion\r\n\t\trandAccelX = 0.1;\r\n\t\trandAccelY = 0.1;\r\n\t\trandAccelZ = 0.5;\r\n\t\t\r\n\t\tgravity = 0; //try changing to a positive number (not too large, for example 0.3), or negative for floating upwards.\r\n\t\t\r\n\t\tparticleRad = 2.5;\r\n\t\t\r\n\t\tsphereCenterX = 0;\r\n\t\tsphereCenterY = 0;\r\n\t\tsphereCenterZ = -3 - sphereRad;\r\n\t\t\r\n\t\t//alpha values will lessen as particles move further back, causing depth-based darkening:\r\n\t\tzeroAlphaDepth = -750; \r\n\t\t\r\n\t\tturnSpeed = 2*Math.PI/1000; //the sphere will rotate at this speed (one complete rotation every 1600 frames).\r\n\t\tturnAngle = 0; //initial angle\r\n\t\t\r\n\t\ttimer = setInterval(onTimer, 10/24);\r\n\t}\r\n\t\r\n\tfunction onTimer() {\r\n\t\t//if enough time has elapsed, we will add new particles.\t\t\r\n\t\tcount++;\r\n\t\t\tif (count >= wait) {\r\n\t\t\t\t\t\t\r\n\t\t\tcount = 0;\r\n\t\t\tfor (i = 0; i < numToAddEachFrame; i++) {\r\n\t\t\t\ttheta = Math.random()*2*Math.PI;\r\n\t\t\t\tphi = Math.acos(Math.random()*2-1);\r\n\t\t\t\tx0 = sphereRad*Math.sin(phi)*Math.cos(theta);\r\n\t\t\t\ty0 = sphereRad*Math.sin(phi)*Math.sin(theta);\r\n\t\t\t\tz0 = sphereRad*Math.cos(phi);\r\n\t\t\t\t\r\n\t\t\t\t//We use the addParticle function to add a new particle. The parameters set the position and velocity components.\r\n\t\t\t\t//Note that the velocity parameters will cause the particle to initially fly outwards away from the sphere center (after\r\n\t\t\t\t//it becomes unstuck).\r\n\t\t\t\tvar p = addParticle(x0, sphereCenterY + y0, sphereCenterZ + z0, 0.002*x0, 0.002*y0, 0.002*z0);\r\n\t\t\t\t\r\n\t\t\t\t//we set some \"envelope\" parameters which will control the evolving alpha of the particles.\r\n\t\t\t\tp.attack = 50;\r\n\t\t\t\tp.hold = 50;\r\n\t\t\t\tp.decay = 100;\r\n\t\t\t\tp.initValue = 0;\r\n\t\t\t\tp.holdValue = particleAlpha;\r\n\t\t\t\tp.lastValue = 0;\r\n\t\t\t\t\r\n\t\t\t\t//the particle will be stuck in one place until this time has elapsed:\r\n\t\t\t\tp.stuckTime = 90 + Math.random()*20;\r\n\t\t\t\t\r\n\t\t\t\tp.accelX = 0;\r\n\t\t\t\tp.accelY = gravity;\r\n\t\t\t\tp.accelZ = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//update viewing angle\r\n\t\tturnAngle = (turnAngle + turnSpeed) % (2*Math.PI);\r\n\t\tsinAngle = Math.sin(turnAngle);\r\n\t\tcosAngle = Math.cos(turnAngle);\r\n\r\n\t\t//background fill\r\n\t\tcontext.fillStyle = \"white\";\r\n\t\tcontext.fillRect(0,0,displayWidth,displayHeight);\r\n\t\t\r\n\t\t//update and draw particles\r\n\t\tp = particleList.first;\r\n\t\twhile (p != null) {\r\n\t\t\t//before list is altered record next particle\r\n\t\t\tnextParticle = p.next;\r\n\t\t\t\r\n\t\t\t//update age\r\n\t\t\tp.age++;\r\n\t\t\t\r\n\t\t\t//if the particle is past its \"stuck\" time, it will begin to move.\r\n\t\t\tif (p.age > p.stuckTime) {\t\r\n\t\t\t\tp.velX += p.accelX + randAccelX*(Math.random()*2 - 1);\r\n\t\t\t\tp.velY += p.accelY + randAccelY*(Math.random()*2 - 1);\r\n\t\t\t\tp.velZ += p.accelZ + randAccelZ*(Math.random()*2 - 1);\r\n\t\t\t\t\r\n\t\t\t\tp.x += p.velX;\r\n\t\t\t\tp.y += p.velY;\r\n\t\t\t\tp.z += p.velZ;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t/*\r\n\t\t\tWe are doing two things here to calculate display coordinates.\r\n\t\t\tThe whole display is being rotated around a vertical axis, so we first calculate rotated coordinates for\r\n\t\t\tx and z (but the y coordinate will not change).\r\n\t\t\tThen, we take the new coordinates (rotX, y, rotZ), and project these onto the 2D view plane.\r\n\t\t\t*/\r\n\t\t\trotX =  cosAngle*p.x + sinAngle*(p.z - sphereCenterZ);\r\n\t\t\trotZ =  -sinAngle*p.x + cosAngle*(p.z - sphereCenterZ) + sphereCenterZ;\r\n\t\t\tm =radius_sp* fLen/(fLen - rotZ);\r\n\t\t\tp.projX = rotX*m + projCenterX;\r\n\t\t\tp.projY = p.y*m + projCenterY;\r\n\t\t\t\t\r\n\t\t\t//update alpha according to envelope parameters.\r\n\t\t\tif (p.age < p.attack+p.hold+p.decay) {\r\n\t\t\t\tif (p.age < p.attack) {\r\n\t\t\t\t\tp.alpha = (p.holdValue - p.initValue)/p.attack*p.age + p.initValue;\r\n\t\t\t\t}\r\n\t\t\t\telse if (p.age < p.attack+p.hold) {\r\n\t\t\t\t\tp.alpha = p.holdValue;\r\n\t\t\t\t}\r\n\t\t\t\telse if (p.age < p.attack+p.hold+p.decay) {\r\n\t\t\t\t\tp.alpha = (p.lastValue - p.holdValue)/p.decay*(p.age-p.attack-p.hold) + p.holdValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tp.dead = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//see if the particle is still within the viewable range.\r\n\t\t\tif ((p.projX > displayWidth)||(p.projX<0)||(p.projY<0)||(p.projY>displayHeight)||(rotZ>zMax)) {\r\n\t\t\t\toutsideTest = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\toutsideTest = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (outsideTest||p.dead) {\r\n\t\t\t\trecycle(p);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\telse {\r\n\t\t\t\t//depth-dependent darkening\r\n\t\t\t\tdepthAlphaFactor = (1-rotZ/zeroAlphaDepth);\r\n\t\t\t\tdepthAlphaFactor = (depthAlphaFactor > 1) ? 1 : ((depthAlphaFactor<0) ? 0 : depthAlphaFactor);\r\n\t\t\t\tcontext.fillStyle = rgbString + depthAlphaFactor*p.alpha + \")\";\r\n\t\t\t\t\r\n\t\t\t\t//draw\r\n\t\t\t\tcontext.beginPath();\r\n\t\t\t\tcontext.arc(p.projX, p.projY, m*particleRad, 0, 2*Math.PI, false);\r\n\t\t\t\tcontext.closePath();\r\n\t\t\t\tcontext.fill();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tp = nextParticle;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tfunction addParticle(x0,y0,z0,vx0,vy0,vz0) {\r\n\t\tvar newParticle;\r\n\t\tvar color;\r\n\t\t\r\n\t\t//check recycle bin for available drop:\r\n\t\tif (recycleBin.first != null) {\r\n\t\t\tnewParticle = recycleBin.first;\r\n\t\t\t//remove from bin\r\n\t\t\tif (newParticle.next != null) {\r\n\t\t\t\trecycleBin.first = newParticle.next;\r\n\t\t\t\tnewParticle.next.prev = null;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trecycleBin.first = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//if the recycle bin is empty, create a new particle (a new ampty object):\r\n\t\telse {\r\n\t\t\tnewParticle = {};\r\n\t\t}\r\n\t\t\r\n\t\t//add to beginning of particle list\r\n\t\tif (particleList.first == null) {\r\n\t\t\tparticleList.first = newParticle;\r\n\t\t\tnewParticle.prev = null;\r\n\t\t\tnewParticle.next = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnewParticle.next = particleList.first;\r\n\t\t\tparticleList.first.prev = newParticle;\r\n\t\t\tparticleList.first = newParticle;\r\n\t\t\tnewParticle.prev = null;\r\n\t\t}\r\n\t\t\r\n\t\t//initialize\r\n\t\tnewParticle.x = x0;\r\n\t\tnewParticle.y = y0;\r\n\t\tnewParticle.z = z0;\r\n\t\tnewParticle.velX = vx0;\r\n\t\tnewParticle.velY = vy0;\r\n\t\tnewParticle.velZ = vz0;\r\n\t\tnewParticle.age = 0;\r\n\t\tnewParticle.dead = false;\r\n\t\tif (Math.random() < 0.5) {\r\n\t\t\tnewParticle.right = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnewParticle.right = false;\r\n\t\t}\r\n\t\treturn newParticle;\t\t\r\n\t}\r\n\t\r\n\tfunction recycle(p) {\r\n\t\t//remove from particleList\r\n\t\tif (particleList.first == p) {\r\n\t\t\tif (p.next != null) {\r\n\t\t\t\tp.next.prev = null;\r\n\t\t\t\tparticleList.first = p.next;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparticleList.first = null;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (p.next == null) {\r\n\t\t\t\tp.prev.next = null;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tp.prev.next = p.next;\r\n\t\t\t\tp.next.prev = p.prev;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//add to recycle bin\r\n\t\tif (recycleBin.first == null) {\r\n\t\t\trecycleBin.first = p;\r\n\t\t\tp.prev = null;\r\n\t\t\tp.next = null;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tp.next = recycleBin.first;\r\n\t\t\trecycleBin.first.prev = p;\r\n\t\t\trecycleBin.first = p;\r\n\t\t\tp.prev = null;\r\n\t\t}\r\n\t}\t\r\n}"]}